{"version":3,"file":"xmb.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/i18n/serializers/xmb.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {decimalDigest} from '../digest';\nimport * as i18n from '../i18n_ast';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst /** @type {?} */ _MESSAGES_TAG = 'messagebundle';\nconst /** @type {?} */ _MESSAGE_TAG = 'msg';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nconst /** @type {?} */ _EXEMPLE_TAG = 'ex';\n\nconst /** @type {?} */ _DOCTYPE = `<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>`;\n\nexport class Xmb implements Serializer {\n/**\n * @param {?} messages\n * @return {?}\n */\nwrite(messages: i18n.Message[]): string {\n    const /** @type {?} */ visitor = new _Visitor();\n    const /** @type {?} */ visited: {[id: string]: boolean} = {};\n    let /** @type {?} */ rootNode = new xml.Tag(_MESSAGES_TAG);\n\n    messages.forEach(message => {\n      const /** @type {?} */ id = this.digest(message);\n\n      // deduplicate messages\n      if (visited[id]) return;\n      visited[id] = true;\n\n      const /** @type {?} */ attrs: {[k: string]: string} = {id};\n\n      if (message.description) {\n        attrs['desc'] = message.description;\n      }\n\n      if (message.meaning) {\n        attrs['meaning'] = message.meaning;\n      }\n\n      rootNode.children.push(\n          new xml.CR(2), new xml.Tag(_MESSAGE_TAG, attrs, visitor.serialize(message.nodes)));\n    });\n\n    rootNode.children.push(new xml.CR());\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}),\n      new xml.CR(),\n      new xml.Doctype(_MESSAGES_TAG, _DOCTYPE),\n      new xml.CR(),\n      rootNode,\n      new xml.CR(),\n    ]);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string): {[msgId: string]: i18n.Node[]} {\n    throw new Error('Unsupported');\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n}\n\nclass _Visitor implements i18n.Visitor {\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ startEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`<${ph.tag}>`)]);\n    const /** @type {?} */ startTagPh = new xml.Tag(_PLACEHOLDER_TAG, {name: ph.startName}, [startEx]);\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [startTagPh];\n    }\n\n    const /** @type {?} */ closeEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`</${ph.tag}>`)]);\n    const /** @type {?} */ closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, {name: ph.closeName}, [closeEx]);\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {name: ph.name})];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {name: ph.name})];\n  }\n/**\n * @param {?} nodes\n * @return {?}\n */\nserialize(nodes: i18n.Node[]): xml.Node[] {\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n/**\n * @param {?} message\n * @return {?}\n */\nexport function digest(message: i18n.Message): string {\n  return decimalDigest(message);\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}