{"version":3,"file":"ng_module_resolver.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/ng_module_resolver.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,UAAU,EAAE,QAAQ,EAAO,MAAM,eAAe;OAEjD,EAAC,WAAW,EAAC,MAAM,qBAAqB;OACxC,EAAC,SAAS,EAAE,SAAS,EAAC,MAAM,eAAe;OAC3C,EAAC,eAAe,EAAE,SAAS,EAAC,MAAM,uBAAuB;AAChE;;;GAGG;AACH,6BAA6B,GAAQ;IACnC,MAAM,CAAC,GAAG,YAAY,QAAQ,CAAC;AACjC,CAAC;AACD;;GAEG;AACH;IACA;;OAEG;IACH,0BAAoB,UAAuC;QAA/C,0BAA+C,GAA/C,sBAA+C;QAAvC,eAAU,GAAV,UAAU,CAA6B;IAAG,CAAC;IAC/D;;;OAGG;IACH,qCAAU,GAAV,UAAW,IAAS,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAC7F;;;;OAIG;IACH,kCAAO,GAAP,UAAQ,IAAe,EAAE,eAAsB;QAAtB,+BAAsB,GAAtB,sBAAsB;QAC3C,IAAM,gBAAgB,CAAC,YAAY,GAC/B,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,mBAAmB,CAAC,CAAC;QAEjF,EAAE,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,YAAY,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gBACpB,MAAM,IAAI,KAAK,CAAC,qCAAmC,SAAS,CAAC,IAAI,CAAC,OAAI,CAAC,CAAC;YAC1E,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IACI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,eAAe,GAAG;KACxB,EAF6F,CAE7F,CAAC;IACF,uBAAC;AAAD,CAAC,AAnCD,IAmCC;AAED;IACC,gBAAgB;IACjB,gBAAgB,CAAC,UAAU,CAAC;IAC3B;;;OAGG;IACJ,gBAAgB,CAAC,cAAc,CAAC;IAC/B,gBAAgB;IACjB,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC;AACtC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgModule, Type} from '@angular/core';\n\nimport {ListWrapper} from './facade/collection';\nimport {isPresent, stringify} from './facade/lang';\nimport {ReflectorReader, reflector} from './private_import_core';\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj: any): obj is NgModule {\n  return obj instanceof NgModule;\n}\n/**\n *  Resolves types to {@link NgModule}.\n */\nexport class NgModuleResolver {\n/**\n * @param {?=} _reflector\n */\nconstructor(private _reflector: ReflectorReader = reflector) {}\n/**\n * @param {?} type\n * @return {?}\n */\nisNgModule(type: any) { return this._reflector.annotations(type).some(_isNgModuleMetadata); }\n/**\n * @param {?} type\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nresolve(type: Type<any>, throwIfNotFound = true): NgModule {\n    const /** @type {?} */ ngModuleMeta: NgModule =\n        ListWrapper.findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n\n    if (isPresent(ngModuleMeta)) {\n      return ngModuleMeta;\n    } else {\n      if (throwIfNotFound) {\n        throw new Error(`No NgModule metadata found for '${stringify(type)}'.`);\n      }\n      return null;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ReflectorReader, },\n];\n}\n\nfunction NgModuleResolver_tsickle_Closure_declarations() {\n /** @type {?} */\nNgModuleResolver.decorators;\n /**\n  * @nocollapse\n  * @type {?}\n  */\nNgModuleResolver.ctorParameters;\n /** @type {?} */\nNgModuleResolver.prototype._reflector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}