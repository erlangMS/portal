{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/config.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation, isDevMode} from '@angular/core';\n\nimport {CompileIdentifierMetadata} from './compile_metadata';\nimport {Identifiers, createIdentifier} from './identifiers';\n/**\n * @return {?}\n */\nfunction unimplemented(): any {\n  throw new Error('unimplemented');\n}\n\nexport class CompilerConfig {\npublic renderTypes: RenderTypes;\npublic defaultEncapsulation: ViewEncapsulation;\nprivate _genDebugInfo: boolean;\nprivate _logBindingUpdate: boolean;\npublic useJit: boolean;\n/**\n * @param {?=} __0\n */\nconstructor(\n      {renderTypes = new DefaultRenderTypes(), defaultEncapsulation = ViewEncapsulation.Emulated,\n       genDebugInfo, logBindingUpdate, useJit = true}: {\n        renderTypes?: RenderTypes,\n        defaultEncapsulation?: ViewEncapsulation,\n        genDebugInfo?: boolean,\n        logBindingUpdate?: boolean,\n        useJit?: boolean\n      } = {}) {\n    this.renderTypes = renderTypes;\n    this.defaultEncapsulation = defaultEncapsulation;\n    this._genDebugInfo = genDebugInfo;\n    this._logBindingUpdate = logBindingUpdate;\n    this.useJit = useJit;\n  }\n/**\n * @return {?}\n */\nget genDebugInfo(): boolean {\n    return this._genDebugInfo === void 0 ? isDevMode() : this._genDebugInfo;\n  }\n/**\n * @return {?}\n */\nget logBindingUpdate(): boolean {\n    return this._logBindingUpdate === void 0 ? isDevMode() : this._logBindingUpdate;\n  }\n}\n\nfunction CompilerConfig_tsickle_Closure_declarations() {\n /** @type {?} */\nCompilerConfig.prototype.renderTypes;\n /** @type {?} */\nCompilerConfig.prototype.defaultEncapsulation;\n /** @type {?} */\nCompilerConfig.prototype._genDebugInfo;\n /** @type {?} */\nCompilerConfig.prototype._logBindingUpdate;\n /** @type {?} */\nCompilerConfig.prototype.useJit;\n}\n\n/**\n *  Types used for the renderer.\n  * Can be replaced to specialize the generated output to a specific renderer\n  * to help tree shaking.\n * @abstract\n */\nexport abstract class RenderTypes {\n/**\n * @return {?}\n */\nget renderer(): CompileIdentifierMetadata { return unimplemented(); }\n/**\n * @return {?}\n */\nget renderText(): CompileIdentifierMetadata { return unimplemented(); }\n/**\n * @return {?}\n */\nget renderElement(): CompileIdentifierMetadata { return unimplemented(); }\n/**\n * @return {?}\n */\nget renderComment(): CompileIdentifierMetadata { return unimplemented(); }\n/**\n * @return {?}\n */\nget renderNode(): CompileIdentifierMetadata { return unimplemented(); }\n/**\n * @return {?}\n */\nget renderEvent(): CompileIdentifierMetadata { return unimplemented(); }\n}\n\nexport class DefaultRenderTypes implements RenderTypes {\n/**\n * @return {?}\n */\nget renderer() { return createIdentifier(Identifiers.Renderer); };\n  renderText: any = null;\n  renderElement: any = null;\n  renderComment: any = null;\n  renderNode: any = null;\n  renderEvent: any = null;\n}\n\nfunction DefaultRenderTypes_tsickle_Closure_declarations() {\n /** @type {?} */\nDefaultRenderTypes.prototype.renderText;\n /** @type {?} */\nDefaultRenderTypes.prototype.renderElement;\n /** @type {?} */\nDefaultRenderTypes.prototype.renderComment;\n /** @type {?} */\nDefaultRenderTypes.prototype.renderNode;\n /** @type {?} */\nDefaultRenderTypes.prototype.renderEvent;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}